type AditionalHour {
  _id: ID!
  memberId: ID!
  member: Member

  date: DateScalar!
  """
  Quantidade de milisegundos para adicionar ao compilado no dia informado
  """
  amount: Int!

  """
  Quantidade de milisegundos para adicionar ao compilado no dia informado
  no formato hh:mm
  """
  formatedAmount: String!

  description: String!
  action: AditionalHourTypes!
}

enum AditionalHourTypes {
  ADD
  REMOVE
}

type Query {
  AditionalHours(
    memberId: ID!
    startDate: DateScalar
    endDate: DateScalar
  ): [AditionalHour]!
}

input AditionalHourCreateInput {
  memberId: ID!
  date: DateScalar!
  amount: Int!
  description: String!
}

type Mutation {
  sendAditionalHour(data: AditionalHourCreateInput!): AditionalHour!
  deleteAditionalHour(_id: ID!): Boolean
}
